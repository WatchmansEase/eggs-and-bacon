{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\QuizScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeScreen, changeScore, resetGame } from \"../Redux/actions\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory for programmatic navigation\nimport Questions from \"../Data/Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizScreen() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const dispatch = useDispatch();\n  const score = useSelector(state => state.score);\n  const history = useHistory(); // Access history object for navigation\n\n  const currentQuestion = Questions[currentQuestionIndex];\n  const handleAnswerSelection = isCorrect => {\n    if (isCorrect) {\n      dispatch(changeScore(score + 1));\n    }\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < Questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      history.push(\"/result\"); // Navigate to the result page\n    }\n  };\n\n  const handleGoBack = () => {\n    dispatch(resetGame());\n    history.push(\"/intro\"); // Navigate to the intro page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerSelection(option.isCorrect),\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizScreen, \"tac3V+dgv4SGlhDWlmo2/cTpQOY=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n_c = QuizScreen;\nexport default QuizScreen;\nvar _c;\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","changeScreen","changeScore","resetGame","useHistory","Questions","jsxDEV","_jsxDEV","QuizScreen","_s","currentQuestionIndex","setCurrentQuestionIndex","dispatch","score","state","history","currentQuestion","handleAnswerSelection","isCorrect","handleNextQuestion","length","push","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","options","map","option","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/QuizScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeScreen, changeScore, resetGame } from \"../Redux/actions\";\r\nimport { useHistory } from \"react-router-dom\"; // Import useHistory for programmatic navigation\r\nimport Questions from \"../Data/Questions\";\r\n\r\nfunction QuizScreen() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const score = useSelector((state) => state.score);\r\n  const history = useHistory(); // Access history object for navigation\r\n\r\n  const currentQuestion = Questions[currentQuestionIndex];\r\n\r\n  const handleAnswerSelection = (isCorrect) => {\r\n    if (isCorrect) {\r\n      dispatch(changeScore(score + 1));\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < Questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      history.push(\"/result\"); // Navigate to the result page\r\n    }\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    dispatch(resetGame());\r\n    history.push(\"/intro\"); // Navigate to the intro page\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"quiz-screen\">\r\n      <h2>Quiz Screen</h2>\r\n      {currentQuestion && (\r\n        <div>\r\n          <h3>{currentQuestion.text}</h3>\r\n          <ul>\r\n            {currentQuestion.options.map((option) => (\r\n              <li key={option.id}>\r\n                <button onClick={() => handleAnswerSelection(option.isCorrect)}>\r\n                  {option.text}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handleNextQuestion}>Next Question</button>\r\n        </div>\r\n      )}\r\n      <p>Current Score: {score}</p>\r\n      <button onClick={handleGoBack}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}