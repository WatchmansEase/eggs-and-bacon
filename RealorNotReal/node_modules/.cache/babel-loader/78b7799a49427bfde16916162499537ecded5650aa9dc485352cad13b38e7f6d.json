{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\QuizScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeScreen, changeScore } from '../Redux/actions'; // Assuming UPDATE_SCORE action is defined in actions\nimport Questions from '../Redux/Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizScreen() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const dispatch = useDispatch();\n  const score = useSelector(state => state.score); // Accessing score from Redux store\n  const currentQuestion = Questions[currentQuestionIndex];\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < Questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      dispatch(changeScreen('result'));\n    }\n  };\n  const handleGoBack = () => {\n    dispatch(changeScreen('menu'));\n  };\n  const handleCheckAnswerAndNext = () => {\n    const currentAnswer = Questions[currentQuestionIndex];\n    if (currentAnswer && currentAnswer.options.some(option => option.isCorrect)) {\n      dispatch(changeScore(score + 1)); // Update score if the answer is correct\n    }\n\n    handleNextQuestion();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheckAnswerAndNext,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizScreen, \"Apv+ZWu6PAWfCu+i9Y30LmKZSx0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = QuizScreen;\nexport default QuizScreen;\nvar _c;\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","changeScreen","changeScore","Questions","jsxDEV","_jsxDEV","QuizScreen","_s","currentQuestionIndex","setCurrentQuestionIndex","dispatch","score","state","currentQuestion","handleNextQuestion","length","handleGoBack","handleCheckAnswerAndNext","currentAnswer","options","some","option","isCorrect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","map","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/QuizScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeScreen, changeScore } from '../Redux/actions'; // Assuming UPDATE_SCORE action is defined in actions\r\nimport Questions from '../Redux/Questions';\r\n\r\nfunction QuizScreen() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const score = useSelector((state) => state.score); // Accessing score from Redux store\r\n  const currentQuestion = Questions[currentQuestionIndex];\r\n\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < Questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      dispatch(changeScreen('result'));\r\n    }\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    dispatch(changeScreen('menu'));\r\n  };\r\n\r\n  const handleCheckAnswerAndNext = () => {\r\n    const currentAnswer = Questions[currentQuestionIndex];\r\n    if (currentAnswer && currentAnswer.options.some((option) => option.isCorrect)) {\r\n      dispatch(changeScore(score + 1));// Update score if the answer is correct\r\n    }\r\n    handleNextQuestion();\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-screen\">\r\n      <h2>Quiz Screen</h2>\r\n      {currentQuestion && (\r\n        <div>\r\n          <h3>{currentQuestion.text}</h3>\r\n          <ul>\r\n            {currentQuestion.options.map((option) => (\r\n              <li key={option.id}>\r\n                <button>\r\n                  {option.text}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={handleCheckAnswerAndNext}>Next Question</button>\r\n        </div>\r\n      )}\r\n      <p>Current Score: {score}</p>\r\n      <button onClick={handleGoBack}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}