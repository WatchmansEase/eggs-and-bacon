{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\ResultScreen.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeScreen } from '../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultScreen({\n  score\n}) {\n  const handleRestart = () => {\n    // Logic to handle restarting the quiz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Result Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Final Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = ResultScreen;\nconst mapStateToProps = state => ({\n  score: state.quiz.score // Access the score from the Redux state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeScreen: screen => dispatch(changeScreen(screen))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);\nvar _c;\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"names":["React","connect","changeScreen","jsxDEV","_jsxDEV","ResultScreen","score","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","quiz","mapDispatchToProps","dispatch","screen","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/ResultScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeScreen } from '../Redux/actions';\r\n\r\nfunction ResultScreen({ score }) {\r\n  const handleRestart = () => {\r\n    // Logic to handle restarting the quiz\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-screen\">\r\n      <h2>Result Screen</h2>\r\n      <p>Final Score: {score}</p>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  score: state.quiz.score, // Access the score from the Redux state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeScreen: (screen) => dispatch(changeScreen(screen)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACD;EAED,oBACEH,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBT,OAAA;MAAAK,QAAA,GAAG,eAAa,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEV;AAACC,EAAA,GAZQT,YAAY;AAcrB,MAAMU,eAAe,GAAIC,KAAK,KAAM;EAClCV,KAAK,EAAEU,KAAK,CAACC,IAAI,CAACX,KAAK,CAAE;AAC3B,CAAC,CAAC;;AAGF,MAAMY,kBAAkB,GAAIC,QAAQ,KAAM;EACxCjB,YAAY,EAAGkB,MAAM,IAAKD,QAAQ,CAACjB,YAAY,CAACkB,MAAM,CAAC;AACzD,CAAC,CAAC;AAEF,eAAenB,OAAO,CAACc,eAAe,EAAEG,kBAAkB,CAAC,CAACb,YAAY,CAAC;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}