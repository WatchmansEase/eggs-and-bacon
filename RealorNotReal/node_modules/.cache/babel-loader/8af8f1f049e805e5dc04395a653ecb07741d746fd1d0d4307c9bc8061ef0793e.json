{"ast":null,"code":"// Redux/reducers.js\nimport { SET_GAME_STATE } from './actions';\nconst initialState = {\n  gameState: 'menu',\n  currQuestion: 0,\n  score: 0,\n  selectedOption: null\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      console.log('Reducer: Updating gameState with payload:', action.payload);\n      return {\n        ...state,\n        gameState: action.payload\n      };\n    // Handle other actions if needed...\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["SET_GAME_STATE","initialState","gameState","currQuestion","score","selectedOption","rootReducer","state","action","type","console","log","payload"],"sources":["C:/Users/user/my-app/src/Redux/reducers.js"],"sourcesContent":["// Redux/reducers.js\r\nimport { SET_GAME_STATE } from './actions';\r\n\r\nconst initialState = {\r\n  gameState: 'menu',\r\n  currQuestion: 0,\r\n  score: 0,\r\n  selectedOption: null,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_GAME_STATE:\r\n      console.log('Reducer: Updating gameState with payload:', action.payload);\r\n      return {\r\n        ...state,\r\n        gameState: action.payload,\r\n      };\r\n    // Handle other actions if needed...\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n\r\n  \r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,WAAW;AAE1C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAM;EACjBC,YAAY,EAAE,CAAC;EACfC,KAAK,EAAE,CAAC;EACRC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,cAAc;MACjBU,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEH,MAAM,CAACI,OAAO,CAAC;MACxE,OAAO;QACL,GAAGL,KAAK;QACRL,SAAS,EAAEM,MAAM,CAACI;MACpB,CAAC;IACH;IACA;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}