{"ast":null,"code":"// Redux/reducers.js\nimport { SET_CURRENT_QUESTION_INDEX, INCREMENT_SCORE, CHANGE_SCREEN } from './actions';\nconst initialState = {\n  questions: [],\n  // Add your questions array here\n  currentQuestionIndex: 0,\n  score: 0,\n  currentScreen: 'intro' // Initial screen\n  // Other initial state properties...\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_QUESTION_INDEX:\n      return {\n        ...state,\n        currentQuestionIndex: action.payload\n      };\n    case INCREMENT_SCORE:\n      return {\n        ...state,\n        score: state.score + 1\n      };\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        gameState: action.payload\n      };\n    case CHANGE_SCREEN:\n      return {\n        ...state,\n        currentScreen: action.payload\n      };\n    // Add other cases if needed for your app's functionality...\n\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["SET_CURRENT_QUESTION_INDEX","INCREMENT_SCORE","CHANGE_SCREEN","initialState","questions","currentQuestionIndex","score","currentScreen","rootReducer","state","action","type","payload","SET_GAME_STATE","gameState"],"sources":["C:/Users/user/my-app/src/Redux/reducers.js"],"sourcesContent":["// Redux/reducers.js\r\nimport {\r\n  SET_CURRENT_QUESTION_INDEX,\r\n  INCREMENT_SCORE,\r\n  CHANGE_SCREEN,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  questions: [], // Add your questions array here\r\n  currentQuestionIndex: 0,\r\n  score: 0,\r\n  currentScreen: 'intro', // Initial screen\r\n  // Other initial state properties...\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_QUESTION_INDEX:\r\n      return {\r\n        ...state,\r\n        currentQuestionIndex: action.payload,\r\n      };\r\n    case INCREMENT_SCORE:\r\n      return {\r\n        ...state,\r\n        score: state.score + 1,\r\n      };\r\n    case SET_GAME_STATE:\r\n      return {\r\n        ...state,\r\n        gameState: action.payload,\r\n      };\r\n    case CHANGE_SCREEN:\r\n      return {\r\n        ...state,\r\n        currentScreen: action.payload,\r\n      };\r\n    // Add other cases if needed for your app's functionality...\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":"AAAA;AACA,SACEA,0BAA0B,EAC1BC,eAAe,EACfC,aAAa,QACR,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EAAE;EACfC,oBAAoB,EAAE,CAAC;EACvBC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE,OAAO,CAAE;EACxB;AACF,CAAC;;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,0BAA0B;MAC7B,OAAO;QACL,GAAGS,KAAK;QACRJ,oBAAoB,EAAEK,MAAM,CAACE;MAC/B,CAAC;IACH,KAAKX,eAAe;MAClB,OAAO;QACL,GAAGQ,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,GAAG;MACvB,CAAC;IACH,KAAKO,cAAc;MACjB,OAAO;QACL,GAAGJ,KAAK;QACRK,SAAS,EAAEJ,MAAM,CAACE;MACpB,CAAC;IACH,KAAKV,aAAa;MAChB,OAAO;QACL,GAAGO,KAAK;QACRF,aAAa,EAAEG,MAAM,CAACE;MACxB,CAAC;IACH;;IAEA;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}