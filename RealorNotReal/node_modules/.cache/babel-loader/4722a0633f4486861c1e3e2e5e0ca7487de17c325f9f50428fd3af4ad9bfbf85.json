{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\ResultScreen.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeScreen } from '../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultScreen({\n  score,\n  changeScreen\n}) {\n  _s();\n  // Get the score from the ScoreContext hook\n  const quizScore = useSelector(selectQuizScore);\n  const handleRestart = () => {\n    changeScreen('intro'); // Go back to the intro screen\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Result Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Final Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultScreen, \"CMAc71ROlYSoAbKf/F8UQVinXhA=\", true);\n_c = ResultScreen;\nconst mapStateToProps = state => ({\n  score: state.quiz.score\n});\nconst mapDispatchToProps = dispatch => ({\n  changeScreen: screen => dispatch(changeScreen(screen))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);\nvar _c;\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"names":["React","connect","changeScreen","jsxDEV","_jsxDEV","ResultScreen","score","_s","quizScore","useSelector","selectQuizScore","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","mapStateToProps","state","quiz","mapDispatchToProps","dispatch","screen","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/ResultScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeScreen } from '../Redux/actions';\r\n\r\nfunction ResultScreen({ score, changeScreen }) {\r\n  // Get the score from the ScoreContext hook\r\n  const quizScore = useSelector(selectQuizScore);\r\n  const handleRestart = () => {\r\n    changeScreen('intro'); // Go back to the intro screen\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-screen\">\r\n      <h2>Result Screen</h2>\r\n      <p>Final Score: {score}</p>\r\n      <button onClick={handleRestart}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  score: state.quiz.score,\r\n});\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeScreen: (screen) => dispatch(changeScreen(screen)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAC;EAAEC,KAAK;EAAEJ;AAAa,CAAC,EAAE;EAAAK,EAAA;EAC7C;EACA,MAAMC,SAAS,GAAGC,WAAW,CAACC,eAAe,CAAC;EAC9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BT,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,oBACEE,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BT,OAAA;MAAAS,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBb,OAAA;MAAAS,QAAA,GAAG,eAAa,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bb,OAAA;MAAQc,OAAO,EAAEP,aAAc;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACV,EAAA,CAdQF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAgBrB,MAAMe,eAAe,GAAIC,KAAK,KAAM;EAClCf,KAAK,EAAEe,KAAK,CAACC,IAAI,CAAChB;AACpB,CAAC,CAAC;AAIF,MAAMiB,kBAAkB,GAAIC,QAAQ,KAAM;EACxCtB,YAAY,EAAGuB,MAAM,IAAKD,QAAQ,CAACtB,YAAY,CAACuB,MAAM,CAAC;AACzD,CAAC,CAAC;AAEF,eAAexB,OAAO,CAACmB,eAAe,EAAEG,kBAAkB,CAAC,CAAClB,YAAY,CAAC;AAAC,IAAAc,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}