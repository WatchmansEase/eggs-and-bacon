{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\QuizScreen.js\";\n// QuizScreen.js\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startQuiz, nextQuestion, submitAnswer } from '../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizScreen({\n  questions,\n  currentQuestionIndex,\n  quizStarted,\n  userAnswers,\n  startQuiz,\n  nextQuestion,\n  submitAnswer\n}) {\n  const startQuizHandler = () => {\n    startQuiz();\n  };\n  const nextQuestionHandler = () => {\n    nextQuestion();\n  };\n  const submitAnswerHandler = answer => {\n    submitAnswer(answer);\n  };\n  if (!quizStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startQuizHandler,\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  if (currentQuestionIndex < questions.length) {\n    const currentQuestion = questions[currentQuestionIndex];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => submitAnswerHandler(option),\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextQuestionHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Quiz Finished!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = QuizScreen;\nconst mapStateToProps = state => ({\n  questions: state.quiz.questions,\n  currentQuestionIndex: state.quiz.currentQuestionIndex,\n  userAnswers: state.quiz.userAnswers,\n  quizStarted: state.quiz.quizStarted\n});\nconst mapDispatchToProps = {\n  startQuiz,\n  nextQuestion,\n  submitAnswer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);\nvar _c;\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"names":["React","connect","startQuiz","nextQuestion","submitAnswer","jsxDEV","_jsxDEV","QuizScreen","questions","currentQuestionIndex","quizStarted","userAnswers","startQuizHandler","nextQuestionHandler","submitAnswerHandler","answer","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","currentQuestion","text","options","map","option","id","_c","mapStateToProps","state","quiz","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/QuizScreen.js"],"sourcesContent":["// QuizScreen.js\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startQuiz, nextQuestion, submitAnswer } from '../Redux/actions';\r\n\r\nfunction QuizScreen({\r\n  questions,\r\n  currentQuestionIndex,\r\n  quizStarted,\r\n  userAnswers,\r\n  startQuiz,\r\n  nextQuestion,\r\n  submitAnswer,\r\n}) {\r\n  const startQuizHandler = () => {\r\n    startQuiz();\r\n  };\r\n\r\n  const nextQuestionHandler = () => {\r\n    nextQuestion();\r\n  };\r\n\r\n  const submitAnswerHandler = (answer) => {\r\n    submitAnswer(answer);\r\n  };\r\n\r\n  if (!quizStarted) {\r\n    return (\r\n      <div>\r\n        <button onClick={startQuizHandler}>Start Quiz</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (currentQuestionIndex < questions.length) {\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n\r\n    return (\r\n      <div>\r\n        <h3>{currentQuestion.text}</h3>\r\n        <ul>\r\n          {currentQuestion.options.map((option) => (\r\n            <li key={option.id}>\r\n              <button onClick={() => submitAnswerHandler(option)}>\r\n                {option.text}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick={nextQuestionHandler}>Next</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>Quiz Finished!</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.quiz.questions,\r\n  currentQuestionIndex: state.quiz.currentQuestionIndex,\r\n  userAnswers: state.quiz.userAnswers,\r\n  quizStarted: state.quiz.quizStarted,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  startQuiz,\r\n  nextQuestion,\r\n  submitAnswer,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}