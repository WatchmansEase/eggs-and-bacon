{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\QuizScreen.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setScore } from './/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizScreen({\n  questions,\n  currQuestionIndex,\n  setScore\n}) {\n  const handleOptionClick = option => {\n    const correctAnswer = questions[currQuestionIndex].options.find(question => question.isCorrect);\n    if (selectedOption === correctAnswer.text) {\n      setScore(); // Call the action to increment the score\n    }\n    // Handle other user logic options\n  };\n\n  const currentQuestion = questions[currQuestionIndex];\n  //display questions\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currQuestionIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: () => handleOptionClick(option.text),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Progress: \", currQuestionIndex + 1, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n_c = QuizScreen;\nconst mapStateToProps = state => ({\n  questions: state.questions,\n  currQuestionIndex: state.currQuestionIndex\n});\nconst mapDispatchToProps = dispatch => ({\n  setScore: () => dispatch(setScore()) //Action to update score\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);\nvar _c;\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"names":["React","connect","setScore","jsxDEV","_jsxDEV","QuizScreen","questions","currQuestionIndex","handleOptionClick","option","correctAnswer","options","find","question","isCorrect","selectedOption","text","currentQuestion","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","_c","mapStateToProps","state","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/QuizScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setScore } from './/actions';\r\n\r\nfunction QuizScreen({ questions, currQuestionIndex, setScore }) {\r\n  const handleOptionClick = (option) => {\r\n    const correctAnswer = questions[currQuestionIndex].options.find(\r\n      (question) => question.isCorrect\r\n    );\r\n    if (selectedOption === correctAnswer.text) {\r\n      setScore(); // Call the action to increment the score\r\n    }\r\n    // Handle other user logic options\r\n  };\r\n\r\n  const currentQuestion = questions[currQuestionIndex];\r\n//display questions\r\nreturn (\r\n  <div className=\"quiz-screen\">\r\n    <h2>Question {currQuestionIndex + 1} of {questions.length}</h2>\r\n    <h3>{currentQuestion.text}</h3>\r\n    <div className=\"options\">\r\n      {currentQuestion.options.map((option) => (\r\n        <div\r\n          key={option.id}\r\n          className=\"option\"\r\n          onClick={() => handleOptionClick(option.text)}\r\n        >\r\n          <p>{option.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    {/* Display progress and number of correct answers */}\r\n    <p>Progress: {currQuestionIndex + 1} / {questions.length}</p>\r\n    {/* Display the number of correct answers */}\r\n    {/* You can get the correct answers count from Redux state */}\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n      questions: state.questions,\r\n      currQuestionIndex: state.currQuestionIndex,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n      setScore: () => dispatch(setScore()), //Action to update score\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizScreen);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC,iBAAiB;EAAEL;AAAS,CAAC,EAAE;EAC9D,MAAMM,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,aAAa,GAAGJ,SAAS,CAACC,iBAAiB,CAAC,CAACI,OAAO,CAACC,IAAI,CAC5DC,QAAQ,IAAKA,QAAQ,CAACC,SACzB,CAAC;IACD,IAAIC,cAAc,KAAKL,aAAa,CAACM,IAAI,EAAE;MACzCd,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd;IACA;EACF,CAAC;;EAED,MAAMe,eAAe,GAAGX,SAAS,CAACC,iBAAiB,CAAC;EACtD;EACA,oBACEH,OAAA;IAAKc,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bf,OAAA;MAAAe,QAAA,GAAI,WAAS,EAACZ,iBAAiB,GAAG,CAAC,EAAC,MAAI,EAACD,SAAS,CAACc,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/DpB,OAAA;MAAAe,QAAA,EAAKF,eAAe,CAACD;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BpB,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBF,eAAe,CAACN,OAAO,CAACc,GAAG,CAAEhB,MAAM,iBAClCL,OAAA;QAEEc,SAAS,EAAC,QAAQ;QAClBQ,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACC,MAAM,CAACO,IAAI,CAAE;QAAAG,QAAA,eAE9Cf,OAAA;UAAAe,QAAA,EAAIV,MAAM,CAACO;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAJff,MAAM,CAACkB,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENpB,OAAA;MAAAe,QAAA,GAAG,YAAU,EAACZ,iBAAiB,GAAG,CAAC,EAAC,KAAG,EAACD,SAAS,CAACc,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1D,CAAC;AAER;AAACI,EAAA,GAlCQvB,UAAU;AAqCnB,MAAMwB,eAAe,GAAIC,KAAK,KAAM;EAC9BxB,SAAS,EAAEwB,KAAK,CAACxB,SAAS;EAC1BC,iBAAiB,EAAEuB,KAAK,CAACvB;AAC/B,CAAC,CAAC;AAEF,MAAMwB,kBAAkB,GAAIC,QAAQ,KAAM;EACpC9B,QAAQ,EAAEA,CAAA,KAAM8B,QAAQ,CAAC9B,QAAQ,CAAC,CAAC,CAAC,CAAE;AAC5C,CAAC,CAAC;;AAEF,eAAeD,OAAO,CAAC4B,eAAe,EAAEE,kBAAkB,CAAC,CAAC1B,UAAU,CAAC;AAAC,IAAAuB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}