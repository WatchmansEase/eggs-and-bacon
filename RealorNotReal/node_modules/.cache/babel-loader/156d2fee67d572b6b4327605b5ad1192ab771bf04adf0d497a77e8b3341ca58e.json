{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\QuizScreen.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeScreen } from '../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizScreen({\n  changeScreen\n}) {\n  const handleGoBack = () => {\n    changeScreen('intro'); // Dispatch changeScreen action with \"intro\" screen\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = QuizScreen;\nconst mapDispatchToProps = dispatch => ({\n  changeScreen: screen => dispatch(changeScreen(screen))\n});\nexport default connect(null, mapDispatchToProps)(QuizScreen);\nvar _c;\n$RefreshReg$(_c, \"QuizScreen\");","map":{"version":3,"names":["React","connect","changeScreen","jsxDEV","_jsxDEV","QuizScreen","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","mapDispatchToProps","dispatch","screen","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/QuizScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeScreen } from '../Redux/actions';\r\n\r\nfunction QuizScreen({ changeScreen }) {\r\n  const handleGoBack = () => {\r\n    changeScreen('intro'); // Dispatch changeScreen action with \"intro\" screen\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-screen\">\r\n      <h2>Quiz Screen</h2>\r\n      {/* Your quiz-related content goes here */}\r\n      <button onClick={handleGoBack}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeScreen: (screen) => dispatch(changeScreen(screen)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(QuizScreen);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,UAAUA,CAAC;EAAEH;AAAa,CAAC,EAAE;EACpC,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBJ,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,oBACEE,OAAA;IAAKG,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BJ,OAAA;MAAAI,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpBR,OAAA;MAAQS,OAAO,EAAEP,YAAa;MAAAE,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACE,EAAA,GAZQT,UAAU;AAcnB,MAAMU,kBAAkB,GAAIC,QAAQ,KAAM;EACxCd,YAAY,EAAGe,MAAM,IAAKD,QAAQ,CAACd,YAAY,CAACe,MAAM,CAAC;AACzD,CAAC,CAAC;AAEF,eAAehB,OAAO,CAAC,IAAI,EAAEc,kBAAkB,CAAC,CAACV,UAAU,CAAC;AAAC,IAAAS,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}