{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\ResultScreen.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultScreen({\n  score\n}) {\n  const handleRestart = () => {\n    // Handle restart logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Result Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Final Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = ResultScreen;\nconst mapStateToProps = state => ({\n  score: state.quiz.score // Access the score from the Redux state\n});\n\nexport default connect(mapStateToProps)(ResultScreen);\nvar _c;\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"names":["React","connect","jsxDEV","_jsxDEV","ResultScreen","score","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","mapStateToProps","state","quiz","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/ResultScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ResultScreen({ score }) {\r\n  const handleRestart = () => {\r\n    // Handle restart logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-screen\">\r\n      <h2>Result Screen</h2>\r\n      <p>Final Score: {score}</p>\r\n      <button onClick={handleRestart}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  score: state.quiz.score, // Access the score from the Redux state\r\n});\r\n\r\nexport default connect(mapStateToProps)(ResultScreen);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,YAAYA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACD;EAED,oBACEH,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBT,OAAA;MAAAK,QAAA,GAAG,eAAa,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BT,OAAA;MAAQU,OAAO,EAAEP,aAAc;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACE,EAAA,GAZQV,YAAY;AAcrB,MAAMW,eAAe,GAAIC,KAAK,KAAM;EAClCX,KAAK,EAAEW,KAAK,CAACC,IAAI,CAACZ,KAAK,CAAE;AAC3B,CAAC,CAAC;;AAEF,eAAeJ,OAAO,CAACc,eAAe,CAAC,CAACX,YAAY,CAAC;AAAC,IAAAU,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}