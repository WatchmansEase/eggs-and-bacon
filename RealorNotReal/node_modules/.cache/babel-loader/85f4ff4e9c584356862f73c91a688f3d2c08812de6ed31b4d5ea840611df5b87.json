{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\my-app\\\\src\\\\components\\\\ResultScreen.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { changeScreen } from '../Redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultScreen() {\n  _s();\n  const score = useSelector(state => state.quiz.score);\n  const handleRestart = () => {\n    // Logic to handle restarting the quiz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Result Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Final Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: chan,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultScreen, \"MTziXBiyl+l8OeYjWNExE898h4M=\", false, function () {\n  return [useSelector];\n});\n_c = ResultScreen;\nconst mapDispatchToProps = dispatch => ({\n  changeScreen: screen => dispatch(changeScreen(screen))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);\nvar _c;\n$RefreshReg$(_c, \"ResultScreen\");","map":{"version":3,"names":["React","useSelector","connect","changeScreen","jsxDEV","_jsxDEV","ResultScreen","_s","score","state","quiz","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chan","_c","mapDispatchToProps","dispatch","screen","mapStateToProps","$RefreshReg$"],"sources":["C:/Users/user/my-app/src/components/ResultScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { changeScreen } from '../Redux/actions';\r\n\r\nfunction ResultScreen() {\r\n  const score = useSelector(state => state.quiz.score);\r\n\r\n  const handleRestart = () => {\r\n    // Logic to handle restarting the quiz\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-screen\">\r\n      <h2>Result Screen</h2>\r\n      <p>Final Score: {score}</p>\r\n      <button onClick={chan}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeScreen: (screen) => dispatch(changeScreen(screen)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAEpD,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACD;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BR,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBZ,OAAA;MAAAQ,QAAA,GAAG,eAAa,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BZ,OAAA;MAAQa,OAAO,EAAEC,IAAK;MAAAN,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACV,EAAA,CAdQD,YAAY;EAAA,QACLL,WAAW;AAAA;AAAAmB,EAAA,GADlBd,YAAY;AAiBrB,MAAMe,kBAAkB,GAAIC,QAAQ,KAAM;EACxCnB,YAAY,EAAGoB,MAAM,IAAKD,QAAQ,CAACnB,YAAY,CAACoB,MAAM,CAAC;AACzD,CAAC,CAAC;AAEF,eAAerB,OAAO,CAACsB,eAAe,EAAEH,kBAAkB,CAAC,CAACf,YAAY,CAAC;AAAC,IAAAc,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}